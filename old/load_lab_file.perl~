#!/usr/bin/perl 

#this program parses a file with the whitespace delimited structure
#<box number>     <bird id>     <directory for execution>	<process to run>

#<process to run> may be "NONE" if no process should run for that box ('start.perl k' will kill any that are)
#only one process may run in a box at once
#if there is more than one line for a box, only the first one will count
#the intended process has to match exactly (same order of options, etc.) the currently running process to be a match

#bird id may be "NONE" if no bird is in the box (although this is not treated as different from a real bird id)
#similarly, <directory for execution> may be NONE (also not treated differently)

#a number enclosed in angle brackets may be used to stand for the value in a previous column for that line
#for example:  the line "12	143	/home/bird/opdata/B<2>	gng -B <1> -S <2> test.stim"
#will be parsed as:     "12	143	/home/bird/opdata/B143	gng -B 12 -S 143 test.stim"

#lines begining with '#' and lines without 4 whitespace delimited columns will be ignored
#only <process to run> may contain whitespace

$file="/home/bird/bin/box_bird_process_test";


$numboxes=16;

@lines=`cat $file`;

sub trim($);

sub trim($)
{
        my $string = shift;
        $string =~ s/^\s+//;
        $string =~ s/\s+$//;
        return $string;
}

$i=0;
while($numBoxes>$i){
    @boxdone[$i]=0;
    $i++;
}

$j=0;
$realLineNum=0;
while(scalar(@lines)>$j){
    $line=trim($lines[$j]);

    if($line =~ /^\#/){
	#print("ignoring a comment line\n");
    } elsif ($line =~ /\S+/) {

	@fields=split(/\s+/,$line,4);

	if(scalar(@fields)==4){
 	    if($fields[0]>0 && $fields[0]<=$numboxes){
		if($boxdone[$fields[0] - 1]==0){
		    $boxdone[$fields[0] - 1]=1;

		    $f=0;
		    foreach $str(@fields){
			
			$current=trim($str);
			while($current =~ /<(\d+)>/ && $1 > 0 && $1 <= $f){
			    #print "\n$current matched for $1\n";
			    $current =~ s/<(\d+)>/$fixed[$realLineNum][$1-1]/;
			}
			$fixed[$realLineNum][$f]=$current;
			
			print "$fixed[$realLineNum][$f] \t";
			$f++;
		    }
		    print "\n";
		    $realLineNum++;
		    
		} else {
		    print("ignoring an additional line for box ".$fields[0]." in the file ".$file."\n");
		}
	    } else {
		print("ignoring a line for box ".$fields[0]." in the file ".$file." because it is less than 0 or bigger than ".$numboxes."\n");
	    }
	} else {
	    print("ignoring a line in the file ".$file." that contains something other than 4 columns\n");
	}
    } else {
	#print "ignoring a blank line\n";
    }
    $j++;
}

