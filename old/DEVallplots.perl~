#!/usr/bin/perl 
use POSIX qw(ceil floor);

$file="/home/bird/bin/box_bird_process";

$plotSuffix='.plot_out';

#maintain the number of boxes here
$numBoxes=16;

@lines=`cat $file`;

$home=`pwd`;

$i=0;
while($numBoxes>$i){
    @boxDone[$i]=0;
    $i++;
}

$outfile='/home/bird/bin/multiplot_temp.script';
$logdir='/home/bird/logs/';
$logsuffix='-log.txt';

open(OUT,'>'.$outfile) || die "whoa -- can't open $outfile: $!";

($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
$logbase = sprintf("%s%02d-%02d-%04d-%02d-%02d-%02d",$logdir,(1+$mon),$mday,(1900+$year),$hour,$min,$sec);
$log=$logbase.$logsuffix;
system "cd $logdir; mv -v *$logsuffix old";
open(LOG,'>'.$log) || warn "could not open $log: $!";
print LOG `ps waux | grep gng ; echo '---\n' `;
print LOG `start.perl;  echo '---\n' `;
print LOG `cat $file ;  echo '---\n' ;`;

$side=ceil(sqrt($numBoxes));
$size=1.0/$side;
print OUT "set multiplot; set nokey; set size $size, $size ; set ytics 0, .2, 1; set grid; set bmargin 2; set lmargin 2; set rmargin 2; set tmargin 2;\n\n";

$j=0;
$record=0;
while(scalar(@lines)>$j){
    $line=$lines[$j];
    @fields=split("\t",$line);

    if(scalar(@fields)==4){

	if($fields[0]>0 && $fields[0]<=$numBoxes){
	    if($boxDone[$fields[0]]==0) {
		chop($fields[3]);
		if($fields[1]>=100 && $fields[1]<=998 && $fields[3] =~ /^gng/ ){

		    $x=(($fields[0] - 1) % $side)*$size;
		    $y=1.0 - (ceil($fields[0]/$side))*$size;
		    @break=split(" ",$fields[3]);
		    $fullstim=$break[scalar(@break)-1];
		    $stimstem=substr($fullstim,0,index($fullstim,'.stim'));
		    $title='\''.$fields[1] . (index($stimstem,'set')>=0 ? ' grammar cat ' : (index($stimstem,'gng')>=0 ? ' ivr ' : ' unrecognized ')) .'train ('.$fullstim.')'.'\'';
		    $datafile='"'.$fields[2].'/'.$fields[1].'_'.$stimstem.$plotSuffix.'"';
		    $plotcommand="plot $datafile using 1:2 with l, $datafile using 1:3 with l, $datafile using 1:4 with l";
# title 'A'  
# title 'C' 
#title 'RT %sess'  
		    
		    print OUT "set origin $x , $y ; \nset title $title ; \n$plotcommand ; \n";
		    #show grid; show ytics; show title; show margin;\n\n";
		    $logstuff= `echo 'box $fields[0]\n'; cd $fields[2]; Xgono -p -c -b 60 -S $fields[1] $fullstim; echo '---\n'; cat $fields[1].summaryDAT; echo '---\n'`;
		    print LOG $logstuff;
		    $logstuff =~ /Feeder ops today: (\d+)/;
		    $feedops[$record]=$1;
		    $logstuff =~ /last trial run at (\d+) (\d+)/;
		    $lasttrialtimes[$record]=$1;
		    $lasttrialdates[$record]=$2;
		    $ids[$record]=$fields[1];
		    $boxnums[$record]=$fields[0];
		    $record++;

		} else {
		    print("box ".$fields[0]." either has no bird or is not running gng\n");
		}
		$boxDone[$fields[0]]=1;
	    } else {
		print("ignoring an additional line for box ".$fields[0]." in the file ".$file."\n");
	    }
	} else {
	    print("ignoring a line for box ".$fields[0]." in the file ".$file." because it is less than 0 or bigger than ".$numBoxes."\n");
	}
    } else {
	print("ignoring a line in the file ".$file." that contains something other than 4 columns\n");
    }
    $j++;
}

print OUT "unset multiplot;";
close(OUT);

system "gnuplot -persist $outfile";

close(LOG);

for($i=0;$i<$record;$i++){
    print "box $boxnums[$i] (bird $ids[$i]): \tfeedops today = $feedops[$i] \tlast trial = $lasttrialtimes[$i] $lasttrialdates[$i]\n";
}
